<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Computer-Architecture - 分类 -</title><link>https://gaohongy.github.io/blog/categories/computer-architecture/</link><description>Computer-Architecture - 分类 -</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 01 Dec 2023 11:46:15 +0800</lastBuildDate><atom:link href="https://gaohongy.github.io/blog/categories/computer-architecture/" rel="self" type="application/rss+xml"/><item><title>Computer Architecture</title><link>https://gaohongy.github.io/blog/posts/computer-architecture/computer-architecture/</link><pubDate>Fri, 01 Dec 2023 11:46:15 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/computer-architecture/computer-architecture/</guid><description>解决 Branch Hazards 的n种方法 static branch prediction freeze of flush the pipeline (predicted-not-taken) treat every branch as not taken treat every branch as taken This buys us a one-cycle improvement when the branch is actually taken, because we know the target address at the end of ID, one cycle before we know whether the branch condition is satisfied in the ALU stage. 三种方</description></item></channel></rss>