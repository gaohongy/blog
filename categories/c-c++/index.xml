<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>C-C++ - Category -</title><link>https://gaohongy.github.io/blog/categories/c-c++/</link><description>C-C++ - Category -</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 15 Apr 2024 11:54:10 +0800</lastBuildDate><atom:link href="https://gaohongy.github.io/blog/categories/c-c++/" rel="self" type="application/rss+xml"/><item><title>Polymorphism</title><link>https://gaohongy.github.io/blog/posts/c-c++/polymorphism/</link><pubDate>Mon, 15 Apr 2024 11:54:10 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/c-c++/polymorphism/</guid><description>谈及多态主要是在考虑具有继承关系的多个类型之间的关系。考虑多态的核心在于引用或指针的 静态类型 与 动态类型 是可能不同的 静态多态 和 动态多态 的一个明</description></item><item><title>C C++ Const Keyword Unscramble</title><link>https://gaohongy.github.io/blog/posts/c-c++/c-c++-const-keyword-unscramble/</link><pubDate>Tue, 27 Feb 2024 09:09:43 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/c-c++/c-c++-const-keyword-unscramble/</guid><description>Embellish Raw Pointer The collocation between const and original pointer is confused to many people. There are two usages of it. The key difference is that if the pointer is prohibited to modify or the data which is pointed by pointer is prohibited to modify. Pointer To Const(指向常量的指针) The first one is a variable pointer that points</description></item><item><title>C++ asynchronous and synchronous mechanisms</title><link>https://gaohongy.github.io/blog/posts/c-c++/c++-asynchronous-and-synchronous-mechanisms/</link><pubDate>Sun, 10 Sep 2023 22:06:00 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/c-c++/c++-asynchronous-and-synchronous-mechanisms/</guid><description>Asynchronization (Multithreading) The first thing we need to do is understanding the correlations between multithreading and parallel computing. Multithreading is one of the many ways to implement parallel computing. Why do we need asynchronous mechanisms ? If we excute some time-consuming operations in main thread, they will block main thread which causes the bad user experience. An effective way to solve this problem is to use asynchronous mechanisms. Creating a</description></item><item><title>C++ Type Conversion</title><link>https://gaohongy.github.io/blog/posts/c-c++/c++-type-conversion/</link><pubDate>Sun, 18 Jun 2023 19:35:22 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/c-c++/c++-type-conversion/</guid><description>普通类型 类类型 对于类类型,编译器只能自动执行一步隐式类型转换.例如从字符串字面值转换为string类型,但是无法继续将string隐式转换为</description></item><item><title>Comparison of C++ object initialization method</title><link>https://gaohongy.github.io/blog/posts/c-c++/comparison-of-c++-object-initialization-method/</link><pubDate>Sun, 18 Jun 2023 17:18:40 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/c-c++/comparison-of-c++-object-initialization-method/</guid><description>在了解创建对象的方式之前，首先了解一下初始化和赋值两个操作， 初始化是创建变量时赋予其一个初始值，即初始化之前并不存在变量 赋值是把对象的当前值</description></item></channel></rss>