<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Compile-Link - 分类 -</title><link>https://gaohongy.github.io/blog/categories/compile-link/</link><description>Compile-Link - 分类 -</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 31 Dec 2023 21:54:31 +0800</lastBuildDate><atom:link href="https://gaohongy.github.io/blog/categories/compile-link/" rel="self" type="application/rss+xml"/><item><title>C C++ Compile</title><link>https://gaohongy.github.io/blog/posts/compile-link/c-c++-compile/</link><pubDate>Sun, 31 Dec 2023 21:54:31 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/compile-link/c-c++-compile/</guid><description>名词辨析 GNU GNU&amp;rsquo;s Not Unix!的递归缩写 一个自由的操作系统,起源于GNU计划,希望发展出一套完整的开放源代码操作系统来取代Unix 基本组成包括： G</description></item><item><title>C C++ Link</title><link>https://gaohongy.github.io/blog/posts/compile-link/c-c++-link/</link><pubDate>Sun, 31 Dec 2023 21:54:31 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/compile-link/c-c++-link/</guid><description>链接，将多个可重定位目标文件和标准库函数合并为可执行目标文件的过程，为了解决外部内存地址的依赖问题 在链接之前，各个程序模块都是相互独立的，模</description></item><item><title>Compiler Principle</title><link>https://gaohongy.github.io/blog/posts/compile-link/compiler-principle/</link><pubDate>Sun, 31 Dec 2023 21:54:31 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/compile-link/compiler-principle/</guid><description>What does compiler do ? Map the source program to a semantically equivalent target program. There are two stages in this mapping process: analysis: the frontend of compiler synthesis: the backend of compiler 词法分析（Lexical Analysis）： 将源代码转换为标记（token</description></item><item><title>Makefile</title><link>https://gaohongy.github.io/blog/posts/compile-link/makefile/</link><pubDate>Sat, 16 Sep 2023 17:49:00 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/compile-link/makefile/</guid><description>variables1 It should be noted that the usage of site a variable in makefile is different from using it in shell. In makefile, we use $() to site a variable, which is means that command substitution in shll2 There are three ways to assign for a variable: =: It allows that the subsquent variable uses the following variable. :=: It is same with the assignment symbol in programming language. ?=:</description></item><item><title>CMake Make</title><link>https://gaohongy.github.io/blog/posts/compile-link/cmake-make/</link><pubDate>Fri, 16 Jun 2023 23:23:00 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/compile-link/cmake-make/</guid><description>说明 cmake的定义是什么 ？&amp;mdash;&amp;ndash;高级编译配置工具 当多个人用不同的语言或者编译器开发一个项目，最终要输出一个可执行文件</description></item><item><title>CUDA Compilation</title><link>https://gaohongy.github.io/blog/posts/compile-link/cuda-compilation/</link><pubDate>Wed, 31 May 2023 11:17:35 +0800</pubDate><author>ghy</author><guid>https://gaohongy.github.io/blog/posts/compile-link/cuda-compilation/</guid><description>Compilation process analysis 涉及到两部分内容，一部分是cuda面对编译问题时的设计架构，另一方面是cuda实际的编译流程 首先对CUDA程序的编译流程进行简要介绍，</description></item></channel></rss>