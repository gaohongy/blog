<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title/><link>https://gaohongy.github.io/blog/</link><description/><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 23 Aug 2024 15:33:50 +0800</lastBuildDate><atom:link href="https://gaohongy.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Debugging With GDB</title><link>https://gaohongy.github.io/blog/posts/project-experience/debugging-with-gdb/</link><pubDate>Fri, 02 Aug 2024 10:58:33 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/project-experience/debugging-with-gdb/</guid><description><![CDATA[<h2 id="how-to-launch-a-program" class="heading-element"><span>How to launch a program</span>
  <a href="#how-to-launch-a-program" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></pa]]></description></item><item><title>Program Loading</title><link>https://gaohongy.github.io/blog/posts/compile-link/program-loading/</link><pubDate>Fri, 02 Aug 2024 09:54:09 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/compile-link/program-loading/</guid><description><![CDATA[<p>Before the program running, static loader or dynamic loader need to initialize the content of the progress stack which is stipulated by <a href="https://jyywiki.cn/OS/manuals/sysv-abi.pdf"target="_blank" rel="external nofollow noopener noreferrer">System V Application Binary Interface</a>.</p>
<p><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png?size=large" data-thumbnail="https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png?size=small" data-sub-html="<h2>https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png</h2>"><img loading="lazy" src="https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png" alt="https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png" srcset="https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png?size=small, https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png?size=large 2x" data-title="https://cdn.jsdelivr.net/gh/gaohongy/cloudImages@master/202408020952442.png" style="background: url(/blog/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></a></p>]]></description></item><item><title>ELF File Format Analysis</title><link>https://gaohongy.github.io/blog/posts/compile-link/elf-file-format-analysis/</link><pubDate>Thu, 13 Jun 2024 14:49:02 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/compile-link/elf-file-format-analysis/</guid><description><![CDATA[<h2 id="what-is-elf-" class="heading-element"><span>What is ELF ?</span>
  <a href="#what-is-elf-" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></pa]]></description></item><item><title>Heterogeneous Compilation</title><link>https://gaohongy.github.io/blog/posts/compile-link/heterogeneous-compilation/</link><pubDate>Fri, 07 Jun 2024 09:49:52 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/compile-link/heterogeneous-compilation/</guid><description><![CDATA[<p>与 <a href="https://gaohongy.github.io/blog/posts/compile-link/cuda-compilation/"target="_blank" rel="external nofollow noopener noreferrer">CUDA Compilation</a> 不同在于</p>
<p>The tools used in the CUDA compilation are all closed source except gcc, g++ etc., for example fatbinary and nvlink. We need to substitue these tools to tools in clang system.</p>
<ol>
<li>Clang Offload Bundler is used to combined different code for different machine structurel.</li>
<li>Clang Offload Packager is used to embed device code into host code.</li>
<li>Clang Linker Wrapper is used to .</li>
</ol>
<p>这里面最复杂的感觉是怎么处理链接关系，如果仅仅说代码嵌入，从 CUDA 的流程来看，在 cudafe1.cpp include stub.c 生成 .o 这一步中 host code 中就已经包含了 device code，如果仅仅说 embed 的话，这显然就已经完成了，但是为何 CUDA 还进行后续那么多步骤，因为这一步生成的 .o 显然是无法运行的，device code 都还只是一个 extern signal，还需要同 CUDA runtime library 进行链接，这个过程该怎么进行比较难想。</p>]]></description></item><item><title>Several Methods For Obtaining Time</title><link>https://gaohongy.github.io/blog/posts/hpc/several-methods-for-obtaining-time/</link><pubDate>Tue, 04 Jun 2024 11:38:22 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/hpc/several-methods-for-obtaining-time/</guid><description><![CDATA[<p>We can reference <a href="http://www.wangkaixuan.tech/?p=840"target="_blank" rel="external nofollow noopener noreferrer">this article</a></p>
<p>About the last method that using rdtsc assembly command to obtain time, there are some error prone points, we can reference to <a href="http://www.wangkaixuan.tech/?p=901"target="_blank" rel="external nofollow noopener noreferrer">this article</a>.</p>
<p>If you want to learn about the TST, please reference to <a href="https://oliveryang.net/2015/09/pitfalls-of-TSC-usage/"target="_blank" rel="external nofollow noopener noreferrer">this article</a>.</p>]]></description></item><item><title>SIMD Extension</title><link>https://gaohongy.github.io/blog/posts/hpc/simd-extension/</link><pubDate>Mon, 03 Jun 2024 16:09:29 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/hpc/simd-extension/</guid><description><![CDATA[<h2 id="说明" class="heading-element"><span>说明</span>
  <a href="#%e8%af%b4%e6%98%8e" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></pa]]></description></item><item><title>OpenMP</title><link>https://gaohongy.github.io/blog/posts/hpc/openmp/</link><pubDate>Tue, 30 Apr 2024 20:49:00 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/hpc/openmp/</guid><description><![CDATA[<h2 id="check-the-openmp-version" class="heading-element"><span>Check the OpenMP version</span>
  <a href="#check-the-openmp-version" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></pa]]></description></item><item><title>Matrix Multiplication</title><link>https://gaohongy.github.io/blog/posts/hpc/matrix-multiplication/</link><pubDate>Sun, 28 Apr 2024 10:00:06 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/hpc/matrix-multiplication/</guid><description><![CDATA[<ol>
<li>GEMM（General Matrix Multiplication）-通用矩阵乘</li>
<li>BLAS (Basic Linear Algebra Subprograms) - 基本线性代数子程序</li>
<li>SGEMM (Single precision General Matrix Multiply) - 单精度矩阵乘法</li>
<li>DGEMM (Double precision General Matrix Multiply) - 双精度矩阵乘法</li>
<li>CGEMM (Complex single precision General Matrix Multiply) - 单精度复数矩阵乘法</li>
<li>ZGEMM (Complex double precision General Matrix Multiply) - 双精度复数矩阵乘法</li>
</ol>
<h2 id="matrix--vector" class="heading-element"><span>Matrix &amp; Vector</span>
  <a href="#matrix--vector" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></pa]]></description></item><item><title>Debugging in Visual Studio Code</title><link>https://gaohongy.github.io/blog/posts/project-experience/debugging-in-visual-studio-code/</link><pubDate>Thu, 18 Apr 2024 11:48:47 +0800</pubDate><author>Author</author><guid>https://gaohongy.github.io/blog/posts/project-experience/debugging-in-visual-studio-code/</guid><description><![CDATA[<h2 id="整体理解" class="heading-element"><span>整体理解</span>
  <a href="#%e6%95%b4%e4%bd%93%e7%90%86%e8%a7%a3" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></pa]]></description></item></channel></rss>